swagger: '2.0'

info:
  description: This is the API documentation for Group 8's COP 4331 Contact Manager application, InternLink
  version: 1.0.0
  title: InternLink
  # put the contact info for your development or API team
  contact:
    email: jh945387@ucf.edu

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

paths:
  /Login.php:
    post:
      tags:
      - Users
      summary: Logs in to the contact manager app
      operationId: dlLogin
      description: Logs in to contact manager app
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: loginItem
        description: Login
        schema:
          $ref: '#/definitions/Login'
      responses:
        200:
          description: OK
        404:
          description: URL Not Found
        500:
          description: Server Error
  /SearchContact.php:
    post:
      tags:
      - Contacts
      summary: Searches for a contact
      operationId: searchContact
      description: Searches for a contact in the contact manager app database
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: searchItem
        description: Contact Search
        schema:
          $ref: '#/definitions/Search'
      responses:
        200:
          description: OK
        404:
          description: URL Not Found
        500:
          description: Server Error
  /UpdateContact.php:
    post:
      tags:
      - Contacts
      summary: Updates a contact
      operationId: updateContact
      description: Updates a contact in the contact manager app database
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: contactItem
        description: Contact Update
        schema:
          $ref: '#/definitions/Update'
      responses:
        200:
          description: OK
        404:
          description: URL Not Found
        500:
          description: Server Error
  /AddContact.php:
    post:
      tags:
      - Contacts
      summary: Adds a contact
      operationId: addContact
      description: Adds a contact to the contact manager app database
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: contactItem
        description: Contact Add
        schema:
          $ref: '#/definitions/Add'
      responses:
        200:
          description: OK
        404:
          description: URL Not Found
        500:
          description: Server Error
  /DeleteContact.php:
    post:
      tags:
      - Contacts
      summary: Deletes a contact
      operationId: deleteContact
      description: Deletes a contact from the contact manager app database
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: deleteContactItem
        description: Contact Delete
        schema:
          $ref: '#/definitions/Delete'
      responses:
        200:
          description: OK
        404:
          description: URL Not Found
        500:
          description: Server Error
  /Register.php:
    post:
      tags:
      - Users
      summary: Registers a new user
      operationId: registerUser
      description: Registers a new user in the contact manager app
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: registerItem
        description: User Register
        schema:
          $ref: '#/definitions/Register'
      responses:
        200:
          description: OK
        404:
          description: URL Not Found
        500:
          description: Server Error
            
definitions:
  Login:
    type: object
    required:
    - login
    - password
    properties:
      login:
        type: string
        example: "fred"
      password:
        type: string
        example: "secret"
  Search:
    type: object
    required:
    - UserID
    - search
    properties:
      UserID:
        type: integer
        example: 1
      search:
        type: string
        example: "Wayne"
  Update:
    type: object
    required:
    - FirstName
    - LastName
    - Email
    - Phone
    - JobTitle
    - Company
    - LinkedIn
    - ID
    - UserID
    properties:
      FirstName:
        type: string
        example: "Dan"
      LastName:
        type: string
        example: "Landsman"
      Email:
        type: string
        example: "test@yahoo.com"
      Phone:
        type: string
        example: "123-456-7890"
      JobTitle:
        type: string
        example: "Database Administrator"
      Company:
        type: string
        example: "Microsoft"
      LinkedIn:
        type: string
        example: "https://www.linkedin.com/in/rickl/"
      ID:
        type: integer
        example: 1
      UserID:
        type: integer
        example: 7
  Add:
    type: object
    required:
    - FirstName
    - LastName
    - Email
    - Phone
    - JobTitle
    - Company
    - LinkedIn
    - UserID
    properties:
      FirstName:
        type: string
        example: "Jhanel"
      LastName:
        type: string
        example: "Ferguson"
      Email:
        type: string
        example: "jhanel.f@example.com"
      Phone:
        type: string
        example: "123-456-7890"
      JobTitle:
        type: string
        example: "Data Analyst"
      Company:
        type: string
        example: "Amazon"
      LinkedIn:
        type: string
        example: "https://www.linkedin.com/in/test/"
      UserID:
        type: integer
        example: 9
  Delete:
    type: object
    required:
    - ID
    - UserID
    properties:
      ID:
        type: integer
        example: 2
      UserID:
        type: integer
        example: 14
  Register:
    type: object
    required:
    - FirstName
    - LastName
    - login
    - password
    properties:
      FirstName:
        type: string
        example: "Walter"
      LastName:
        type: string
        example: "White"
      login:
        type: string
        example: "test1"
      password:
        type: string
        example: "test2"
    

host: internlink.xyz
basePath: /LAMPAPI
schemes:
- http
